(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{578:function(t,s,e){"use strict";e.r(s);var n=e(1),a=Object(n.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("Boxx"),t._v(" "),e("h2",{attrs:{id:"sync有神马用"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#sync有神马用"}},[t._v("#")]),t._v(" .sync有神马用")]),t._v(" "),e("ul",[e("li",[t._v(".sync是vue中用于实现简单的“双向绑定”的语法糖，在平时的开发中是非常使用的。")]),t._v(" "),e("li",[t._v("vue的prop是单向下行绑定：父级的prop的更新会向下流动到子组件中，但是反过来不行。可是有些情况，我们需要对prop进行“双向绑定”。这个时候，就可以用.sync来解决")])]),t._v(" "),e("h2",{attrs:{id:"sync怎么用"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#sync怎么用"}},[t._v("#")]),t._v(" .sync怎么用")]),t._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("    <my-title :title.sync=\"title\"></my-title>\n\n    // 当子组件需要更新 title 的值时，它需要显式地触发一个更新事件：\n    this.$emit('update:title', newValue)\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br")])]),e("p",[t._v("这是一个自定义my-title组件，父组件通过prop属性，将title传给子组件，假若子组件想改变title，可以通过这种方式自下而上的改变")])],1)}),[],!1,null,null,null);s.default=a.exports}}]);