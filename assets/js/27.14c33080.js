(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{601:function(t,s,a){"use strict";a.r(s);var e=a(1),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"一、amd"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一、amd"}},[t._v("#")]),t._v(" "),a("strong",[t._v("一、AMD")])]),t._v(" "),a("p",[a("code",[t._v("AMD，Asynchronous Module Definition, 异步模块定义")]),t._v("。它是一个在浏览器端模块化开发的规范。 它不是"),a("code",[t._v("javascript")]),t._v("原生支持，所以使用AMD规范进行页面开发需要用到对应的库，也就是"),a("code",[t._v("RequireJS")]),t._v("，AMD其实是"),a("code",[t._v("RequireJS")]),t._v("在推广的过程中对模块定义的范围化的产出。")]),t._v(" "),a("p",[a("code",[t._v("requireJS")]),t._v("主要解决两个问题：")]),t._v(" "),a("ul",[a("li",[t._v("多个"),a("code",[t._v("js")]),t._v("文件存在依赖关系时，被依赖的文件需要早于依赖它的文件加载到浏览器")]),t._v(" "),a("li",[a("code",[t._v("js")]),t._v("加载的时候浏览器会阻塞渲染线程，加载文件越多，页面失去响应的时间越长")])]),t._v(" "),a("p",[t._v("用法： "),a("code",[t._v("require")]),t._v("需要一个"),a("code",[t._v("root")]),t._v("来作为搜索依赖的开始(类似"),a("code",[t._v("package.json")]),t._v("的"),a("code",[t._v("main")]),t._v(")，"),a("code",[t._v("data-main")]),t._v("来指定这个"),a("code",[t._v("root")]),t._v("。")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("script src"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"script/require.js"')]),t._v(" data"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("main"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"script/app.js"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("script"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("p",[t._v("这样就指定了"),a("code",[t._v("root")]),t._v("是"),a("code",[t._v("app.js")]),t._v("，只有直接或者间接与"),a("code",[t._v("app.js")]),t._v("有依赖关系的"),a("code",[t._v("module")]),t._v("才会被插入到"),a("code",[t._v("html")]),t._v("中。")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("define()")]),t._v("函数：用来定义模块的函数。"),a("code",[t._v("args0")]),t._v(": 需引入模块的名字数组，"),a("code",[t._v("arg1")]),t._v("：依赖引入之后的"),a("code",[t._v("callback")]),t._v("，"),a("code",[t._v("callback")]),t._v("的参数就是引入的东西。如果有多个依赖，则参数按照引入的顺序依次传入。")])]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("define")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'dependence_name'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("args")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// args就是从dependence_name引入的东西")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ... Your fucking code ...")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" your_export"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br")])]),a("ul",[a("li",[a("code",[t._v("require()")]),t._v("函数： 用来引入模块的函数。")])]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'import_module_name'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("args")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// args就是从import_module_name引入的东西")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ... Your fucking code ...")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br")])]),a("ul",[a("li",[a("code",[t._v("require.config")]),t._v("配置：\n"),a("ul",[a("li",[a("code",[t._v("baseUrl")]),t._v(":加载"),a("code",[t._v("module")]),t._v("的根路径")]),t._v(" "),a("li",[a("code",[t._v("paths")]),t._v("：用于映射不存在根路径下面的模块路径")]),t._v(" "),a("li",[a("code",[t._v("shimes")]),t._v("：加载非"),a("code",[t._v("AMD")]),t._v("规范的"),a("code",[t._v("js")])])])])]),t._v(" "),a("h2",{attrs:{id:"二、cmd"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#二、cmd"}},[t._v("#")]),t._v(" "),a("strong",[t._v("二、CMD")])]),t._v(" "),a("p",[a("code",[t._v("CMD， Common Module Definition")]),t._v("， 通用模块定义。 "),a("code",[t._v("CMD")]),t._v("是在"),a("code",[t._v("sea.js")]),t._v("推广的过程中产生的。在"),a("code",[t._v("CMD")]),t._v("规范中，一个模块就是一个文件。")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("define")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("require"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" exprots"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" module")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" fs "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'fs'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//接受模块标识作为唯一参数")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// exports，module则和CommonJS类似")]),t._v("\n exports"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("module "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  props"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'value'")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nseajs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("use")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'test.js'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("test_exports")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ....")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br")])]),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("null")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("AMD")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("CMD")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("定义module时对依赖的处理")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("推崇依赖前置，在定义的时候就要声明其依赖的模块")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("推崇就近依赖，只有在用到这个module的时候才去require")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("加载方式")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("async")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("async")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("执行module的方式")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("加载module完成后就会执行该module，所有module都加载执行完成后会进入require的回调函数，执行主逻辑。依赖的执行顺序和书写的顺序不一定一致，谁先下载完谁先执行，但是主逻辑 一定在所有的依赖加载完成后才执行(有点类似Promise.all)。")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("加载完某个依赖后并不执行，只是下载而已。在所有的module加载完成后进入主逻辑，遇到require语句的时候才会执行对应的module。module的执行顺序和书写的顺序是完全一致的。")])])])]),t._v(" "),a("h2",{attrs:{id:"三、commonjs"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#三、commonjs"}},[t._v("#")]),t._v(" "),a("strong",[t._v("三、CommonJS")])]),t._v(" "),a("p",[t._v("English time： Common -- 常识 W3C官方定义的API都只能基于Browser，而CommonJS则弥补了javascript这方面的不足。")]),t._v(" "),a("p",[a("code",[t._v("NodeJS")]),t._v("是"),a("code",[t._v("CommonJS")]),t._v("规范的主要实践者。它有四个重要的环境变量为模块化的实现提供支持："),a("code",[t._v("module、exports、require、global")]),t._v("。 实际用时，使用"),a("code",[t._v("module.exports")]),t._v("(不推荐使用exports)定义对外输出的API，用"),a("code",[t._v("require")]),t._v("来引用模块。"),a("code",[t._v("CommonJS")]),t._v("用同步的方式加载模块。在"),a("code",[t._v("Server")]),t._v("上模块文件都在本地磁盘，所以读取非常快没什么不妥，但是在"),a("code",[t._v("Browser")]),t._v("由于网络的原因，更合理的方案是异步加载。 "),a("code",[t._v("CommonJS")]),t._v("对模块的定义主要分为："),a("strong",[t._v("模块引用、模块定义、模块标识")]),t._v("3个部分。")]),t._v(" "),a("h3",{attrs:{id:"_1、模块引用："}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1、模块引用："}},[t._v("#")]),t._v(" 1、模块引用：")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" fs "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'fs'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("p",[t._v("require的执行步骤：")]),t._v(" "),a("ol",[a("li",[t._v("如果是核心模块， 如fs，则直接返回模块")]),t._v(" "),a("li",[t._v("如果是路径，则拼接成一个绝对路径，然后先读取缓存require.cache再读取文件。(如果没有扩展名，则以"),a("code",[t._v("js => json => node")]),t._v("(以二进制插件模块的方式去读取)的顺序去识别)")]),t._v(" "),a("li",[t._v("首次加载后的模块会在"),a("code",[t._v("require.cache")]),t._v("中，所以多次require，得到的对象是同一个(引用的同一个对象)")]),t._v(" "),a("li",[t._v("在执行模块代码的时候，会将模块包装成以下模式，以便于作用域在模块范围之内。")])]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("exports"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" require"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" module"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" __filename"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" __dirname")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// module codes")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])]),a("ol",[a("li",[t._v("包装之后的代码同过vm原生模块的runInThisContext()方法执行(类似eval，不过具有明确上下文不会污染环境)，返回一个function对象。 最后将当前模块对象的"),a("code",[t._v("exports")]),t._v("、"),a("code",[t._v("require")]),t._v("方法、"),a("code",[t._v("module")]),t._v("以及文件定位中得到的"),a("code",[t._v("完整文件路径")]),t._v("(包括文件名)和"),a("code",[t._v("文件目录")]),t._v("传递给这个function执行。")])]),t._v(" "),a("h3",{attrs:{id:"_2、模块定义："}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2、模块定义："}},[t._v("#")]),t._v(" 2、模块定义：")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nexports"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("propName "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" fn"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nmodule"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" fn"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])]),a("p",[t._v("一个"),a("code",[t._v("module")]),t._v("对象代表模块本身，"),a("code",[t._v("exports")]),t._v("是"),a("code",[t._v("module")]),t._v("的属性。一般通过在"),a("code",[t._v("exports")]),t._v("上挂载属性即可定义导出，也可以直接给"),a("code",[t._v("module.exports")]),t._v("赋值来定义导出(推荐)。")]),t._v(" "),a("h3",{attrs:{id:"_3、模块标识："}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3、模块标识："}},[t._v("#")]),t._v(" 3、模块标识：")]),t._v(" "),a("p",[t._v("模块标识就是传递给"),a("code",[t._v("require()")]),t._v("方法的参数，可以是相对路径或者绝对路径，也可以是符合小驼峰命名的字符串。 "),a("code",[t._v("NodeJS")]),t._v("中"),a("code",[t._v("CommonJS")]),t._v("的实现："),a("code",[t._v("Node")]),t._v("中模块分为Node提供的"),a("code",[t._v("核心模块")]),t._v("和用户编写的"),a("code",[t._v("文件模块")]),t._v("。")]),t._v(" "),a("p",[a("strong",[t._v("核心模块")]),t._v("在"),a("code",[t._v("Node")]),t._v("源代码的编译过程中，编译进了二进制执行文件。在"),a("code",[t._v("Node")]),t._v("启动的时候部分核心模块就加载到了"),a("code",[t._v("memory")]),t._v("中，所以在引用核心模块的时候，文件定位和编译执行步骤可以省略，并且在路径判断中优先判断，所以它的加载速度是最快的。 "),a("strong",[t._v("文件模块")]),t._v("则是在运行时动态加载，需要完整的路径分析，文件定位、编译执行等过程，速度较核心模块慢。 在"),a("code",[t._v("NodeJS")]),t._v("中引入模块需要经历如下3个步骤：")]),t._v(" "),a("ol",[a("li",[t._v("路径分析：module.paths = [‘当前目录下的node_modules’, ‘父目录下的node_modules’, …， ‘跟目录下的node_modules’]")]),t._v(" "),a("li",[t._v("文件定位："),a("strong",[t._v("文件扩展名分析、目录和包的处理")]),t._v("。\n"),a("ul",[a("li",[t._v("文件扩展名分析："),a("code",[t._v("Node")]),t._v("会按"),a("code",[t._v(".js => .json => .node")]),t._v("的次序补足扩展名依次尝试。（在尝试的过程中会调用同步的fs模块来查看文件是否存在）")]),t._v(" "),a("li",[t._v("目录和包的处理：可能没有对应的文件，但是存在相应的目录。这时"),a("code",[t._v("Node")]),t._v("会在此目录中查找"),a("code",[t._v("package.json")]),t._v("，并"),a("code",[t._v("JSON.parse")]),t._v("出"),a("code",[t._v("main")]),t._v("(入口文件)对应的文件。如果"),a("code",[t._v("main")]),t._v("属性错误或者没有"),a("code",[t._v("package.json")]),t._v("，则将"),a("code",[t._v("index")]),t._v("作为"),a("code",[t._v("main")]),t._v("。如果没有定位成功任何文件，则到下一个模块路径重复上述工作，如果整个"),a("code",[t._v("module.paths")]),t._v("都遍历完都没有找到目标文件，则跑出查找失败错误。")])])]),t._v(" "),a("li",[t._v("编译执行：在"),a("code",[t._v("Node")]),t._v("中每个模块文件都是一个对象，编译执行是引入文件模块的最后一个阶段。定位到文件后，"),a("code",[t._v("Node")]),t._v("会新建一个模块对象，然后根据路径载入并编译。对于不同的文件扩展名，其载入的方式也有所不同：\n"),a("ul",[a("li",[a("code",[t._v(".js")]),t._v(": 通过"),a("code",[t._v("fs")]),t._v("模块同步读取文件后编译执行")]),t._v(" "),a("li",[a("code",[t._v(".node")]),t._v("：这是"),a("code",[t._v("C++")]),t._v("编写的扩展文件，通过"),a("code",[t._v("dlopen()")]),t._v("加载最后编译生成的文件。")]),t._v(" "),a("li",[a("code",[t._v(".json")]),t._v("：同"),a("code",[t._v(".js")]),t._v("文件，之后用"),a("code",[t._v("JSON.parse")]),t._v("解析返回结果。 其余文件： 都按"),a("code",[t._v("js")]),t._v("的方式解析。")])])])]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("null")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("CommonJS")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("ES6")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("keywords")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("exports,   require, module, __filename. __dirname")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("import,   export")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("导入")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("const   path = require('fs');   必须将一个模块导出的所有属性都引入")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("import   path from 'path';   可以只引入某个")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("导出")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("module.exports   = App;")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("export   default App;")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("导入的对象")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("随意修改   值的copy")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("不能随意修改   值的reference")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("导入次数")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("可以任意次require，除了第一次，之后的require都是从require.cache中取得")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("在头部导入，只能导入一次")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("加载")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("运行时加载")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("编译时输出接口")])])])]),t._v(" "),a("h2",{attrs:{id:"四、es6模块"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#四、es6模块"}},[t._v("#")]),t._v(" "),a("strong",[t._v("四、ES6模块")])]),t._v(" "),a("p",[t._v("ES6的模块已经比较熟悉了，用法不多赘述，直接上码：")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" prop "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'app'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//从app中导入prop")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" prop "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" newProp "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'app'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 功能和上面一样，不过是将导入的prop重命名为newProp")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" App "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'App'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 导入App的default")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" App "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'App'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 导入App的所有属性到App对象中")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" variable "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'value'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 导出一个名为variable的常量")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("variable "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" newVar"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 和import 的重命名类似，将variable作为newVar导出")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v(" variable "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'value'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 将variable作为默认导出")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("variable "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//  和上面的写法基本一样")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("variable"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'module'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 导出module的variable ，该模块中无法访问")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("variable "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" newVar"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'module'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 下面的自己看  不解释了")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("variable "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" newVar"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'module'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'module'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br")])]),a("blockquote",[a("p",[t._v("ps：ES6模块导入的变量(其实应该叫常量更准确)具有以下特点： 变量提升、相当于被"),a("code",[t._v("Object.freeze()")]),t._v("包装过一样、import/export只能在顶级作用域")])]),t._v(" "),a("p",[a("code",[t._v("ES6")]),t._v("模块区别于"),a("code",[t._v("CommonJS")]),t._v("的运行时加载，"),a("code",[t._v("import")]),t._v(" 命令会被"),a("code",[t._v("JavaScript")]),t._v("引擎静态分析，优先于模块内的其他内容执行(类似于函数声明优先于其他语句那样)， 也就是说在文件的任何位置"),a("code",[t._v("import")]),t._v("引入模块都会被提前到文件顶部。")]),t._v(" "),a("p",[a("code",[t._v("ES6")]),t._v("的模块 "),a("strong",[t._v("自动开启严格模式")]),t._v("，即使没有写"),a("code",[t._v("'use strict';")]),t._v(" 。 运行一个包含"),a("code",[t._v("import")]),t._v("声明的模块时，被引入的模块先导入并加载，然后根据依赖关系，每个模块的内容会使用深度优先的原则进行遍历。跳过已经执行过的模块，避免依赖循环。")]),t._v(" "),a("p",[t._v("okey~接下来老哥再看看(查查)"),a("code",[t._v("import")]),t._v("到底干啥了： 标准几乎没有谈到"),a("code",[t._v("import")]),t._v("该做什么，"),a("code",[t._v("ES6")]),t._v("将模块的加载细节完全交给了实现。 大致来说，"),a("code",[t._v("js")]),t._v("引擎运行一个模块的时候，其行为大致可归纳为以下四步：")]),t._v(" "),a("ol",[a("li",[t._v("解析：engine去解析模块的代码，检查语法等。")]),t._v(" "),a("li",[t._v("加载：递归加载所有被引入的模块，"),a("strong",[t._v("深度优先")]),t._v("。")]),t._v(" "),a("li",[t._v("链接：为每个新加载的模块创建一个作用域，并将模块中的声明绑入其中（包括从其他模块中引入的）。 当"),a("code",[t._v("js")]),t._v("引擎开始执行加载进来的模块中的代码的时候，"),a("code",[t._v("import")]),t._v("的处理过程已经完了，所以"),a("code",[t._v("js")]),t._v("引擎执行到一行"),a("code",[t._v("import")]),t._v("声明的时候什么也不会干。引入都是静态实现的，等到代码执行的时候就啥都不干了。")])]),t._v(" "),a("blockquote",[a("p",[t._v("既然说到了模块(module)，那就顺便提一下它和脚本(script)的区别(注意，我这里说的区别仅限于在Web浏览器中)：")])]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("-")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[a("code",[t._v("module")])]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[a("code",[t._v("script")])])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("使用方式 (当然还有其他的执行方式，在这里不做过多讨论)")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v('<script src="./source.js type="module" />')])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v('<script src="./source.js type="text/javascript" />')])])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("下载")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("①遇到"),a("code",[t._v("<script>时，会自动应用defer。 ②下载 && 解析module。 ③递归下载module中导入的资源。下载阶段完成。 | 遇到<script>")]),t._v("时默认阻塞文档渲染，开启下载。")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}})]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("执行方式")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("①下载完成后会递归执行module中导入的资源。 ②然后执行module本身。 ps：内联module少了下载module本身的步骤，其他步骤和引入的module相同。")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("默认是下载完成立即执行")])])])]),t._v(" "),a("h2",{attrs:{id:"参考链接："}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考链接："}},[t._v("#")]),t._v(" "),a("strong",[t._v("参考链接：")])]),t._v(" "),a("p",[a("a",{attrs:{href:"https://juejin.im/post/6844903576309858318",target:"_blank",rel:"noopener noreferrer"}},[t._v("前端模块化：CommonJS,AMD,CMD,ES6"),a("OutboundLink")],1)]),t._v(" "),a("p",[a("a",{attrs:{href:"https://juejin.im/entry/6844903453987176461",target:"_blank",rel:"noopener noreferrer"}},[t._v("ES6 的模块系统"),a("OutboundLink")],1)]),t._v(" "),a("p",[a("a",{attrs:{href:"https://baike.baidu.com/item/%E6%B7%B1%E5%85%A5%E6%B5%85%E5%87%BANode.js/12639161?fr=aladdin",target:"_blank",rel:"noopener noreferrer"}},[t._v("深入浅出NodeJS"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("作者：wbcs\n链接：https://juejin.im/post/6844903698385076237\n来源：掘金")])])}),[],!1,null,null,null);s.default=n.exports}}]);